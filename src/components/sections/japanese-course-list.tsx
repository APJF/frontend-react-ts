"use client"

import { useState } from "react"
import { Search, Filter, Star, Clock, Users, BookOpen, ChevronDown, Award, Target } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card, CardContent, CardFooter, CardHeader } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu"

// Sample Japanese course data
const japaneseCourses = [
  {
    id: 1,
    title: "Ti·∫øng Nh·∫≠t N5 - Kh·ªüi ƒë·∫ßu ho√†n h·∫£o",
    description: "H·ªçc ti·∫øng Nh·∫≠t t·ª´ con s·ªë 0 v·ªõi Hiragana, Katakana v√† 800 t·ª´ v·ª±ng c∆° b·∫£n",
    image: "/placeholder.svg?height=200&width=300",
    price: "899,000",
    originalPrice: "1,299,000",
    rating: 4.9,
    students: 3247,
    duration: "60 gi·ªù",
    level: "N5",
    instructor: "Sensei Tanaka",
    category: "C∆° b·∫£n",
    vocabulary: "800 t·ª´",
    grammar: "45 ng·ªØ ph√°p",
    isHot: true,
    isBestseller: true,
  },
  {
    id: 2,
    title: "JLPT N4 - Ti·∫øn b∆∞·ªõc v·ªØng ch·∫Øc",
    description: "N√¢ng cao k·ªπ nƒÉng v·ªõi 1500 t·ª´ v·ª±ng v√† c√°c c·∫•u tr√∫c ng·ªØ ph√°p ph·ª©c t·∫°p h∆°n",
    image: "/placeholder.svg?height=200&width=300",
    price: "1,199,000",
    originalPrice: "1,699,000",
    rating: 4.8,
    students: 2156,
    duration: "80 gi·ªù",
    level: "N4",
    instructor: "Sensei Yamada",
    category: "Trung c·∫•p",
    vocabulary: "1500 t·ª´",
    grammar: "65 ng·ªØ ph√°p",
    isHot: false,
    isBestseller: true,
  },
  {
    id: 3,
    title: "Kanji Master - L√†m ch·ªß ch·ªØ H√°n",
    description: "H·ªçc 1000+ ch·ªØ Kanji th√¥ng d·ª•ng v·ªõi ph∆∞∆°ng ph√°p ghi nh·ªõ hi·ªáu qu·∫£",
    image: "/placeholder.svg?height=200&width=300",
    price: "799,000",
    originalPrice: "1,199,000",
    rating: 4.7,
    students: 1834,
    duration: "45 gi·ªù",
    level: "N5-N3",
    instructor: "Sensei Sato",
    category: "Ch·ªØ vi·∫øt",
    vocabulary: "1000+ Kanji",
    grammar: "Onyomi/Kunyomi",
    isHot: true,
    isBestseller: false,
  },
  {
    id: 4,
    title: "Giao ti·∫øp ti·∫øng Nh·∫≠t h√†ng ng√†y",
    description: "Th·ª±c h√†nh h·ªôi tho·∫°i trong c√°c t√¨nh hu·ªëng th·ª±c t·∫ø t·∫°i Nh·∫≠t B·∫£n",
    image: "/placeholder.svg?height=200&width=300",
    price: "1,099,000",
    originalPrice: "1,599,000",
    rating: 4.8,
    students: 2567,
    duration: "50 gi·ªù",
    level: "N4-N3",
    instructor: "Sensei Watanabe",
    category: "Giao ti·∫øp",
    vocabulary: "H·ªôi tho·∫°i",
    grammar: "Th·ª±c h√†nh",
    isHot: false,
    isBestseller: true,
  },
  {
    id: 5,
    title: "JLPT N3 - Trung c·∫•p ti·∫øn b·ªô",
    description: "Chu·∫©n b·ªã thi N3 v·ªõi 3000 t·ª´ v·ª±ng v√† ng·ªØ ph√°p trung c·∫•p",
    image: "/placeholder.svg?height=200&width=300",
    price: "1,499,000",
    originalPrice: "2,199,000",
    rating: 4.9,
    students: 1923,
    duration: "100 gi·ªù",
    level: "N3",
    instructor: "Sensei Kobayashi",
    category: "Trung c·∫•p",
    vocabulary: "3000 t·ª´",
    grammar: "85 ng·ªØ ph√°p",
    isHot: true,
    isBestseller: false,
  },
  {
    id: 6,
    title: "VƒÉn h√≥a Nh·∫≠t B·∫£n qua ng√¥n ng·ªØ",
    description: "T√¨m hi·ªÉu vƒÉn h√≥a, phong t·ª•c t·∫≠p qu√°n Nh·∫≠t B·∫£n qua c√°c b√†i h·ªçc ng√¥n ng·ªØ",
    image: "/placeholder.svg?height=200&width=300",
    price: "699,000",
    originalPrice: "999,000",
    rating: 4.6,
    students: 1456,
    duration: "35 gi·ªù",
    level: "N5-N4",
    instructor: "Sensei Nakamura",
    category: "VƒÉn h√≥a",
    vocabulary: "VƒÉn h√≥a",
    grammar: "Keigo c∆° b·∫£n",
    isHot: false,
    isBestseller: false,
  },
  {
    id: 7,
    title: "Business Japanese - Ti·∫øng Nh·∫≠t th∆∞∆°ng m·∫°i",
    description: "Ti·∫øng Nh·∫≠t chuy√™n ng√†nh cho m√¥i tr∆∞·ªùng c√¥ng vi·ªác v√† kinh doanh",
    image: "/placeholder.svg?height=200&width=300",
    price: "1,799,000",
    originalPrice: "2,499,000",
    rating: 4.7,
    students: 987,
    duration: "75 gi·ªù",
    level: "N2-N1",
    instructor: "Sensei Suzuki",
    category: "Th∆∞∆°ng m·∫°i",
    vocabulary: "Business",
    grammar: "Keigo n√¢ng cao",
    isHot: false,
    isBestseller: false,
  },
  {
    id: 8,
    title: "JLPT N2 - Ti·ªÅn cao c·∫•p",
    description: "Chinh ph·ª•c N2 v·ªõi 6000 t·ª´ v·ª±ng v√† ng·ªØ ph√°p ph·ª©c t·∫°p",
    image: "/placeholder.svg?height=200&width=300",
    price: "1,899,000",
    originalPrice: "2,699,000",
    rating: 4.8,
    students: 1234,
    duration: "120 gi·ªù",
    level: "N2",
    instructor: "Sensei Takahashi",
    category: "Cao c·∫•p",
    vocabulary: "6000 t·ª´",
    grammar: "120 ng·ªØ ph√°p",
    isHot: true,
    isBestseller: false,
  },
]

const categories = ["T·∫•t c·∫£", "C∆° b·∫£n", "Trung c·∫•p", "Cao c·∫•p", "Giao ti·∫øp", "Ch·ªØ vi·∫øt", "VƒÉn h√≥a", "Th∆∞∆°ng m·∫°i"]
const levels = ["T·∫•t c·∫£", "N5", "N4", "N3", "N2", "N1", "N5-N4", "N4-N3", "N2-N1", "N5-N3"]
const sortOptions = ["M·ªõi nh·∫•t", "Ph·ªï bi·∫øn nh·∫•t", "Gi√° th·∫•p ƒë·∫øn cao", "Gi√° cao ƒë·∫øn th·∫•p", "ƒê√°nh gi√° cao nh·∫•t"]

export default function JapaneseCourseList() {
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedCategory, setSelectedCategory] = useState("T·∫•t c·∫£")
  const [selectedLevel, setSelectedLevel] = useState("T·∫•t c·∫£")
  const [sortBy, setSortBy] = useState("M·ªõi nh·∫•t")

  const filteredCourses = japaneseCourses.filter((course) => {
    const matchesSearch =
      course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      course.description.toLowerCase().includes(searchTerm.toLowerCase())
    const matchesCategory = selectedCategory === "T·∫•t c·∫£" || course.category === selectedCategory
    const matchesLevel = selectedLevel === "T·∫•t c·∫£" || course.level === selectedLevel
    
    return matchesSearch && matchesCategory && matchesLevel
  })

  return (
    <div className="min-h-screen bg-gradient-to-br from-red-50 via-white to-red-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b border-red-100">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex flex-col space-y-4">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
                  <span className="text-red-600">üáØüáµ</span>
                  Kh√≥a h·ªçc ti·∫øng Nh·∫≠t
                </h1>
                <p className="text-gray-600 mt-1">H·ªçc ti·∫øng Nh·∫≠t t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao - Chu·∫©n b·ªã thi JLPT</p>
              </div>
              <div className="text-sm text-gray-600">{filteredCourses.length} kh√≥a h·ªçc</div>
            </div>

            {/* Search and Filters */}
            <div className="flex flex-col lg:flex-row gap-4">
              {/* Search */}
              <div className="relative flex-1">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
                <Input
                  placeholder="T√¨m ki·∫øm kh√≥a h·ªçc ti·∫øng Nh·∫≠t..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10 border-red-200 focus:border-red-400"
                />
              </div>

              {/* Filters */}
              
            </div>
          </div>
        </div>
      </div>

      {/* Course Grid */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredCourses.map((course) => (
            <Card
              key={course.id}
              className="overflow-hidden hover:shadow-xl transition-all duration-300 bg-white border-red-100 hover:border-red-200"
            >
              <CardHeader className="p-0">
                <div className="relative">
                  <img
                    src={course.image || "/placeholder.svg"}
                    alt={course.title}
                    className="w-full h-48 object-cover"
                  />
                  <div className="absolute top-3 left-3 flex gap-2">
                    {course.isHot && <Badge className="bg-red-500 hover:bg-red-600">üî• HOT</Badge>}
                    {course.isBestseller && <Badge className="bg-yellow-500 hover:bg-yellow-600">‚≠ê Bestseller</Badge>}
                  </div>
                  <div className="absolute top-3 right-3 flex flex-col gap-1">
                    <Badge className="bg-red-600 hover:bg-red-700 text-white font-bold">JLPT {course.level}</Badge>
                  </div>
                </div>
              </CardHeader>

              <CardContent className="p-4">
                <div className="space-y-3">
                  <div className="flex items-start justify-between">
                    <h3 className="font-semibold text-lg line-clamp-2 text-gray-900 flex-1">{course.title}</h3>
                  </div>

                  <p className="text-gray-600 text-sm line-clamp-2">{course.description}</p>

                  <div className="flex items-center gap-2 text-sm text-gray-700">
                    <span className="font-medium">üë®‚Äçüè´ {course.instructor}</span>
                  </div>

                  <div className="flex items-center justify-between text-sm">
                    <div className="flex items-center gap-1">
                      <Star className="h-4 w-4 fill-yellow-400 text-yellow-400" />
                      <span className="font-medium">{course.rating}</span>
                      <span className="text-gray-500">({course.students.toLocaleString()})</span>
                    </div>
                    <Badge variant="secondary" className="bg-red-50 text-red-700 border-red-200">
                      {course.category}
                    </Badge>
                  </div>

                  <div className="grid grid-cols-2 gap-2 text-sm">
                    <div className="flex items-center gap-1 text-gray-600">
                      <Clock className="h-4 w-4" />
                      <span>{course.duration}</span>
                    </div>
                    <div className="flex items-center gap-1 text-gray-600">
                      <Users className="h-4 w-4" />
                      <span>{course.students.toLocaleString()}</span>
                    </div>
                    <div className="flex items-center gap-1 text-gray-600">
                      <BookOpen className="h-4 w-4" />
                      <span>{course.vocabulary}</span>
                    </div>
                    <div className="flex items-center gap-1 text-gray-600">
                      <Target className="h-4 w-4" />
                      <span>{course.grammar}</span>
                    </div>
                  </div>
                </div>
              </CardContent>

              <CardFooter className="p-4 pt-0">
                <div className="flex items-center justify-between w-full">
                  <div className="flex items-center gap-2">
                    <span className="text-2xl font-bold text-red-600">{course.price}‚Ç´</span>
                    <span className="text-sm text-gray-500 line-through">{course.originalPrice}‚Ç´</span>
                  </div>
                  <Button className="bg-red-600 hover:bg-red-700 text-white">H·ªçc ngay</Button>
                </div>
              </CardFooter>
            </Card>
          ))}
        </div>

        {filteredCourses.length === 0 && (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">üáØüáµ</div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc n√†o</h3>
            <p className="text-gray-500">Th·ª≠ thay ƒë·ªïi b·ªô l·ªçc ho·∫∑c t·ª´ kh√≥a t√¨m ki·∫øm</p>
          </div>
        )}

        {/* Load More Button */}
        {filteredCourses.length > 0 && (
          <div className="text-center mt-8">
            <Button variant="outline" size="lg" className="border-red-200 text-red-600 hover:bg-red-50">
              Xem th√™m kh√≥a h·ªçc
            </Button>
          </div>
        )}
      </div>

      {/* Info Banner */}
      <div className="bg-red-600 text-white py-8 mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <h2 className="text-2xl font-bold mb-4">üéå T·∫°i sao ch·ªçn h·ªçc ti·∫øng Nh·∫≠t v·ªõi ch√∫ng t√¥i?</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mt-6">
              <div className="flex flex-col items-center">
                <Award className="h-8 w-8 mb-2" />
                <h3 className="font-semibold mb-1">Chu·∫©n JLPT</h3>
                <p className="text-sm opacity-90">N·ªôi dung theo chu·∫©n thi JLPT ch√≠nh th·ª©c</p>
              </div>
              <div className="flex flex-col items-center">
                <Users className="h-8 w-8 mb-2" />
                <h3 className="font-semibold mb-1">Gi√°o vi√™n b·∫£n ng·ªØ</h3>
                <p className="text-sm opacity-90">H·ªçc v·ªõi sensei ng∆∞·ªùi Nh·∫≠t kinh nghi·ªám</p>
              </div>
              <div className="flex flex-col items-center">
                <Target className="h-8 w-8 mb-2" />
                <h3 className="font-semibold mb-1">Th·ª±c h√†nh th·ª±c t·∫ø</h3>
                <p className="text-sm opacity-90">Luy·ªán t·∫≠p trong t√¨nh hu·ªëng th·ª±c t·∫ø</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
